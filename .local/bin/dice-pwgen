#!/usr/bin/env bash
DICTIONARY="/tmp/diceware.lst"
DICTIONARY_URL="http://world.std.com/~reinhold/diceware.wordlist.asc"
WORDS="4"
COUNT="5"
SEPARATOR="-"
VERBOSE=false

usage() {
    cat <<EOF
dice-pwgen [-n <n>] [-w <n>] [-h] [-v]

-h      Print this help and exit
-n <n>  Specify number of generated passwords
-w <n>  Specify number of words in each password
-v      Verbose output
EOF
}

join_array() {
    local IFS="${1}"
    shift
    echo "${*}"
}

get_entropy() {
    local entropy=""
    for ((i=0; i < 5; i++)) {
        n=$((RANDOM%6+1))
        entropy="${entropy}${n}"
    }

    echo ${entropy}
}

generate_password() {
    local password=()
    local entropy
    local word

    for ((x = 0; x < WORDS; x++ )) {
        entropy="$(get_entropy)"
        word="$(awk '/^'"${entropy}"'/ {print $2}' "${DICTIONARY}")"
        ${VERBOSE} && echo "entropy: ${entropy}, word: ${word}" >&2
        password+=("${word}")
    }

    join_array "${SEPARATOR}" "${password[@]}"
}

main() {
    while getopts ":w:n:s:hv" optchar; do
        case "${optchar}" in
            w)
                WORDS="${OPTARG}"
            ;;
            n)
                COUNT="${OPTARG}"
            ;;
            s)
                SEPARATOR="${OPTARG}"
            ;;
            v)
                VERBOSE=true
                echo "verbose on"
            ;;
            h)
                usage
                exit 0
            ;;
            *)
            ;;
        esac
    done
    OPTIND=1

    if [[ ! -e "${DICTIONARY}" || "$(find "${DICTIONARY}" -cmin +60)" ]]; then
        curl -s -o "${DICTIONARY}" "${DICTIONARY_URL}"  \
            || { echo "Failed to download dictionary" >&2; return 1; }
    fi

    local passwords=()

    for ((n=0; n < COUNT; n++)) {
        passwords+=("$(generate_password)")
    }

    join_array $'\n' "${passwords[@]}"

    return 0
}

main "$@"
exit $?
