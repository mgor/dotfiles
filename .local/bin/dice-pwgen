#!/usr/bin/env bash
DICTIONARY="/tmp/diceware.lst"
DICTIONARY_URL="http://world.std.com/~reinhold/diceware.wordlist.asc"
WORDS="4"
COUNT="1"
SEPARATOR="-"

usage() {
    cat <<EOF
dice-pwgen [-n <n>] [-w <n>] [-h]

-h      Print this help and exit
-n <n>  Specify number of generated passwords
-w <n>  Specify number of words in each password
EOF
}

while getopts ":w:n:s:h" optchar; do
    case "${optchar}" in
        w)
            WORDS="${OPTARG}"
        ;;
        n)
            COUNT="${OPTARG}"
        ;;
        s)
            SEPARATOR="${OPTARG}"
        ;;
        h)
            usage
            exit 0
        ;;
        *)
        ;;
    esac
done
OPTIND=1

join_array() {
    local IFS="${1}"
    shift
    echo "${*}"
}

get_entropy() {
    local entropy=""
    for ((i=0; i < 5; i++))
    {
        n=$((RANDOM%6+1))
        entropy="${entropy}${n}"
    }

    echo ${entropy}
}

generate_password() {
    local password=()
    local entropy
    local word

    for ((x = 0; x < WORDS; x++ )) {
        entropy="$(get_entropy)"
        word="$(awk '/^'"${entropy}"'/ {print $2}' "${DICTIONARY}")"
        password+=("${word}")
    }

    join_array "${SEPARATOR}" "${password[@]}"
}

if [[ ! -e "${DICTIONARY}" || "$(find "${DICTIONARY}" -cmin +60)" ]]; then
    echo "Downloading dictionary..."
    curl -s -o "${DICTIONARY}" "${DICTIONARY_URL}"  \
        || { echo "Failed to download dictionary" >&2; exit 1; }
fi

for ((n=0; n < COUNT; n++)) {
    generate_password
}
